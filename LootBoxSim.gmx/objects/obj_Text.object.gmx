<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>Manager</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//LEAK: these arrays are probably causing a leak, replace them for ds_lists
txt = ds_list_create();
spc = ds_list_create();

ds_list_add(txt,"");
ds_list_add(spc,false);

//for(i=0;i&lt;=64;i++)txt[i]="Test" + string(i)

currentTxt=0
letter=0

display_set_gui_size(640,480)
draw_set_font(font_Default)


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (currentTxt&lt;ds_list_size(txt)-1&amp;&amp;letter&gt;=string_length(txt[| currentTxt])){
    currentTxt++
    letter=0
}


if (currentTxt=ds_list_size(txt)-1&amp;&amp;letter&gt;=string_length(txt[| currentTxt]))&amp;&amp;!instance_exists(obj_Input) instance_create(0,0,obj_Input)


if(letter&lt;string_length(txt[| currentTxt]))letter++
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//LEAK: deallocating txt and spc
if (ds_exists(txt, ds_type_list)) {
 ds_list_empty(txt);
 ds_list_destroy(txt);
 txt=undefined
}

if (ds_exists(spc, ds_type_list)) {
 ds_list_empty(spc);
 ds_list_destroy(spc);
 spc=undefined
}

instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(font_Default);
draw_set_halign(fa_left);
draw_set_valign(fa_left);
var ydraw=0
var color=global.text_color


while (ydraw+(12*currentTxt)&gt;444)ydraw-=12

for(i=0;i&lt;currentTxt;i++){
    if (spc[| i] == true) {
     draw_set_color(merge_colour(c_yellow,color,0.5));
    } else {
     draw_set_color(color);
    }
    draw_text(12,ydraw,txt[| i])
    ydraw+=12
}

if (spc[| currentTxt] == true) {
 draw_set_colour(merge_colour(c_yellow,color,0.5));
} else {
 draw_set_colour(color);
}
draw_text(12,ydraw,string_copy(txt[| currentTxt],1,letter))

draw_set_colour(color);
draw_triangle(mouse_x,mouse_y,mouse_x,mouse_y+16,mouse_x+10,mouse_y+10,1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
